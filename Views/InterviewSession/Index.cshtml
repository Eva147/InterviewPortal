@inject IHttpContextAccessor HttpContextAccessor
@model InterviewPortal.Models.InterviewSession

@{
    ViewData["Title"] = "Interview Session";

    var userAnswersJson = HttpContextAccessor.HttpContext.Session.GetString("MockInterviewState");
    var userAnswers = new Dictionary<int, int>();
    var questions = Model.Topic.Questions.ToList(); 

    if (!string.IsNullOrEmpty(userAnswersJson))
    {
        var mockState = Newtonsoft.Json.JsonConvert.DeserializeObject<InterviewPortal.Controllers.MockInterviewState>(userAnswersJson);
        for (int i = 0; i < questions.Count; i++)
        {
            if (i < mockState.UserAnswers.Count && mockState.UserAnswers[i] != -1)
            {
                userAnswers[questions[i].Id] = mockState.UserAnswers[i];
            }
        }
    }
}

@section Styles {
    <link rel="stylesheet" href="~/css/candidate-dashboard.css" />
    <link rel="stylesheet" href="~/css/interview.css" />
}

<div class="interview-type-container">
    <h2>Welcome to your Interview for the position of <strong>@Model.Position.Name</strong>!</h2>
    <p>Good luck!</p>

    <form id="interviewForm" method="post" asp-action="SubmitInterview" asp-controller="InterviewSession" asp-route-sessionId="@Model.Id">
        @Html.AntiForgeryToken()

        <div class="interview-questions">
            @for (int i = 0; i < Model.Topic.Questions.Count; i++)
            {
                var question = questions[i];

                <div class="question-container">
                    <h3 class="question-text">@question.QuestionText</h3>

                    <div class="answers-container">
                        @foreach (var answer in question.Answers)
                        {
                            <div class="answer-option">
                                <input type="radio"
                                       id="answer_@answer.Id"
                                       name="Answers[@question.Id]"
                                       value="@answer.Id"
                                       data-question-id="@question.Id"
                                @(userAnswers.ContainsKey(question.Id) && userAnswers[question.Id] == answer.Id ? "checked" : "") />
                                <label for="answer_@answer.Id">@answer.AnswerText</label>
                            </div>
                        }
                    </div>
                </div>
            }
        </div>

        <div class="submit-container">
            <button type="submit" class="interview-button">Submit Interview</button>
        </div>
    </form>

    <div class="back-link">
        <a href="javascript:history.back();">← Back to Instructions</a>
    </div>

    <script>
        document.querySelectorAll('input[type="radio"]').forEach(radio => {
            radio.addEventListener('change', function () {
                const questionId = parseInt(this.dataset.questionId);
                const answerId = parseInt(this.value);
                const sessionId = @Model.Id;
                const questionIndex = Array.from(document.querySelectorAll('.question-container')).findIndex(container =>
                    container.querySelector(`[name="Answers[${questionId}]"]`)
                );

                fetch('/InterviewSession/SaveAnswerToSession', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    },
                    body: JSON.stringify({
                        sessionId: sessionId,
                        questionIndex: questionIndex,
                        answerId: answerId
                    })
                });
            });
        });
    </script>
</div>
